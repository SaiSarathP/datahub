"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[6806],{4137:function(t,l,e){e.d(l,{Zo:function(){return s},kt:function(){return c}});var n=e(7294);function r(t,l,e){return l in t?Object.defineProperty(t,l,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[l]=e,t}function u(t,l){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);l&&(n=n.filter((function(l){return Object.getOwnPropertyDescriptor(t,l).enumerable}))),e.push.apply(e,n)}return e}function a(t){for(var l=1;l<arguments.length;l++){var e=null!=arguments[l]?arguments[l]:{};l%2?u(Object(e),!0).forEach((function(l){r(t,l,e[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):u(Object(e)).forEach((function(l){Object.defineProperty(t,l,Object.getOwnPropertyDescriptor(e,l))}))}return t}function o(t,l){if(null==t)return{};var e,n,r=function(t,l){if(null==t)return{};var e,n,r={},u=Object.keys(t);for(n=0;n<u.length;n++)e=u[n],l.indexOf(e)>=0||(r[e]=t[e]);return r}(t,l);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);for(n=0;n<u.length;n++)e=u[n],l.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var k=n.createContext({}),i=function(t){var l=n.useContext(k),e=l;return t&&(e="function"==typeof t?t(l):a(a({},l),t)),e},s=function(t){var l=i(t.components);return n.createElement(k.Provider,{value:l},t.children)},d={inlineCode:"code",wrapper:function(t){var l=t.children;return n.createElement(n.Fragment,{},l)}},p=n.forwardRef((function(t,l){var e=t.components,r=t.mdxType,u=t.originalType,k=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),p=i(e),c=r,h=p["".concat(k,".").concat(c)]||p[c]||d[c]||u;return e?n.createElement(h,a(a({ref:l},s),{},{components:e})):n.createElement(h,a({ref:l},s))}));function c(t,l){var e=arguments,r=l&&l.mdxType;if("string"==typeof t||r){var u=e.length,a=new Array(u);a[0]=p;var o={};for(var k in l)hasOwnProperty.call(l,k)&&(o[k]=l[k]);o.originalType=t,o.mdxType="string"==typeof t?t:r,a[1]=o;for(var i=2;i<u;i++)a[i]=e[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,e)}p.displayName="MDXCreateElement"},627:function(t,l,e){e.r(l),e.d(l,{frontMatter:function(){return o},contentTitle:function(){return k},metadata:function(){return i},toc:function(){return s},default:function(){return p}});var n=e(7462),r=e(3366),u=(e(7294),e(4137)),a=["components"],o={id:"inputObjects",title:"Input objects",slug:"inputObjects",sidebar_position:7},k=void 0,i={unversionedId:"graphql/inputObjects",id:"graphql/inputObjects",isDocsHomePage:!1,title:"Input objects",description:"ActorFilterInput",source:"@site/genDocs/graphql/inputObjects.md",sourceDirName:"graphql",slug:"/graphql/inputObjects",permalink:"/docs/graphql/inputObjects",editUrl:"https://github.com/linkedin/datahub/blob/master/genDocs/graphql/inputObjects.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"inputObjects",title:"Input objects",slug:"inputObjects",sidebar_position:7},sidebar:"overviewSidebar",previous:{title:"Objects",permalink:"/docs/graphql/objects"},next:{title:"Interfaces",permalink:"/docs/graphql/interfaces"}},s=[{value:"ActorFilterInput",id:"actorfilterinput",children:[],level:2},{value:"AddGroupMembersInput",id:"addgroupmembersinput",children:[],level:2},{value:"AddLinkInput",id:"addlinkinput",children:[],level:2},{value:"AddOwnerInput",id:"addownerinput",children:[],level:2},{value:"AspectParams",id:"aspectparams",children:[],level:2},{value:"AutoCompleteInput",id:"autocompleteinput",children:[],level:2},{value:"AutoCompleteMultipleInput",id:"autocompletemultipleinput",children:[],level:2},{value:"BrowseInput",id:"browseinput",children:[],level:2},{value:"BrowsePathsInput",id:"browsepathsinput",children:[],level:2},{value:"ChartEditablePropertiesUpdate",id:"charteditablepropertiesupdate",children:[],level:2},{value:"ChartUpdateInput",id:"chartupdateinput",children:[],level:2},{value:"CreateGroupInput",id:"creategroupinput",children:[],level:2},{value:"DashboardEditablePropertiesUpdate",id:"dashboardeditablepropertiesupdate",children:[],level:2},{value:"DashboardUpdateInput",id:"dashboardupdateinput",children:[],level:2},{value:"DataFlowEditablePropertiesUpdate",id:"datafloweditablepropertiesupdate",children:[],level:2},{value:"DataFlowUpdateInput",id:"dataflowupdateinput",children:[],level:2},{value:"DataJobEditablePropertiesUpdate",id:"datajobeditablepropertiesupdate",children:[],level:2},{value:"DataJobUpdateInput",id:"datajobupdateinput",children:[],level:2},{value:"DatasetDeprecationUpdate",id:"datasetdeprecationupdate",children:[],level:2},{value:"DatasetEditablePropertiesUpdate",id:"dataseteditablepropertiesupdate",children:[],level:2},{value:"DatasetUpdateInput",id:"datasetupdateinput",children:[],level:2},{value:"DescriptionUpdateInput",id:"descriptionupdateinput",children:[],level:2},{value:"EditableSchemaFieldInfoUpdate",id:"editableschemafieldinfoupdate",children:[],level:2},{value:"EditableSchemaMetadataUpdate",id:"editableschemametadataupdate",children:[],level:2},{value:"EntityCountInput",id:"entitycountinput",children:[],level:2},{value:"EntityRequestContext",id:"entityrequestcontext",children:[],level:2},{value:"FacetFilterInput",id:"facetfilterinput",children:[],level:2},{value:"GetAccessTokenInput",id:"getaccesstokeninput",children:[],level:2},{value:"GlobalTagsUpdate",id:"globaltagsupdate",children:[],level:2},{value:"InstitutionalMemoryMetadataUpdate",id:"institutionalmemorymetadataupdate",children:[],level:2},{value:"InstitutionalMemoryUpdate",id:"institutionalmemoryupdate",children:[],level:2},{value:"ListGroupsInput",id:"listgroupsinput",children:[],level:2},{value:"ListPoliciesInput",id:"listpoliciesinput",children:[],level:2},{value:"ListRecommendationsInput",id:"listrecommendationsinput",children:[],level:2},{value:"ListUsersInput",id:"listusersinput",children:[],level:2},{value:"OwnershipUpdate",id:"ownershipupdate",children:[],level:2},{value:"OwnerUpdate",id:"ownerupdate",children:[],level:2},{value:"PolicyUpdateInput",id:"policyupdateinput",children:[],level:2},{value:"RecommendationRequestContext",id:"recommendationrequestcontext",children:[],level:2},{value:"RelationshipsInput",id:"relationshipsinput",children:[],level:2},{value:"RemoveGroupMembersInput",id:"removegroupmembersinput",children:[],level:2},{value:"RemoveLinkInput",id:"removelinkinput",children:[],level:2},{value:"RemoveOwnerInput",id:"removeownerinput",children:[],level:2},{value:"ResourceFilterInput",id:"resourcefilterinput",children:[],level:2},{value:"SearchAcrossEntitiesInput",id:"searchacrossentitiesinput",children:[],level:2},{value:"SearchInput",id:"searchinput",children:[],level:2},{value:"SearchRequestContext",id:"searchrequestcontext",children:[],level:2},{value:"TagAssociationInput",id:"tagassociationinput",children:[],level:2},{value:"TagAssociationUpdate",id:"tagassociationupdate",children:[],level:2},{value:"TagUpdateInput",id:"tagupdateinput",children:[],level:2},{value:"TermAssociationInput",id:"termassociationinput",children:[],level:2}],d={toc:s};function p(t){var l=t.components,e=(0,r.Z)(t,a);return(0,u.kt)("wrapper",(0,n.Z)({},d,e,{components:l,mdxType:"MDXLayout"}),(0,u.kt)("h2",{id:"actorfilterinput"},"ActorFilterInput"),(0,u.kt)("p",null,"Input required when creating or updating an Access Policies Determines which actors the Policy applies to"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"users",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"[String!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"A disjunctive set of users to apply the policy to"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"groups",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"[String!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"A disjunctive set of groups to apply the policy to"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"resourceOwners",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,u.kt)("code",null,"Boolean!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Whether the filter should return TRUE for owners of a particular resource Only applies to policies of type METADATA, which have a resource associated with them"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"allUsers",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,u.kt)("code",null,"Boolean!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Whether the filter should apply to all users"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"allGroups",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,u.kt)("code",null,"Boolean!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Whether the filter should apply to all groups"))))),(0,u.kt)("h2",{id:"addgroupmembersinput"},"AddGroupMembersInput"),(0,u.kt)("p",null,"Input required to add members to a DataHub group"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"groupUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The group to add members to"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"userUrns",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"[String!]!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The members to add to the group"))))),(0,u.kt)("h2",{id:"addlinkinput"},"AddLinkInput"),(0,u.kt)("p",null,"Input provided when adding the association between a Metadata Entity and a Link"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"linkUrl",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The url of the link to add or remove"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"label",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"A label to attach to the link"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"resourceUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The urn of the resource or entity to attach the link to, for example a dataset urn"))))),(0,u.kt)("h2",{id:"addownerinput"},"AddOwnerInput"),(0,u.kt)("p",null,"Input provided when adding the association between a Metadata Entity and an user or group owner"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"ownerUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The primary key of the Owner to add or remove"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"ownerEntityType",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#ownerentitytype"},(0,u.kt)("code",null,"OwnerEntityType!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The owner type, either a user or group"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"resourceUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The urn of the resource or entity to attach or remove the owner from, for example a dataset urn"))))),(0,u.kt)("h2",{id:"aspectparams"},"AspectParams"),(0,u.kt)("p",null,"Params to configure what list of aspects should be fetched by the aspects property"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"autoRenderOnly",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,u.kt)("code",null,"Boolean"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Only fetch auto render aspects"))))),(0,u.kt)("h2",{id:"autocompleteinput"},"AutoCompleteInput"),(0,u.kt)("p",null,"Input for performing an auto completion query against a single Metadata Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"type",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,u.kt)("code",null,"EntityType"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Entity type to be autocompleted against"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"query",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The raw query string"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"field",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"An optional entity field name to autocomplete on"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"limit",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The maximum number of autocomplete results to be returned"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"filters",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#facetfilterinput"},(0,u.kt)("code",null,"[FacetFilterInput!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Faceted filters applied to autocomplete results"))))),(0,u.kt)("h2",{id:"autocompletemultipleinput"},"AutoCompleteMultipleInput"),(0,u.kt)("p",null,"Input for performing an auto completion query against a a set of Metadata Entities"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"types",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,u.kt)("code",null,"[EntityType!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Entity types to be autocompleted against Optional, if none supplied, all searchable types will be autocompleted against"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"query",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The raw query string"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"field",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"An optional field to autocomplete against"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"limit",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The maximum number of autocomplete results"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"filters",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#facetfilterinput"},(0,u.kt)("code",null,"[FacetFilterInput!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Faceted filters applied to autocomplete results"))))),(0,u.kt)("h2",{id:"browseinput"},"BrowseInput"),(0,u.kt)("p",null,"Input required for browse queries"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"type",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,u.kt)("code",null,"EntityType!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The browse entity type"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"path",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"[String!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The browse path"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"start",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The starting point of paginated results"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"count",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The number of elements included in the results"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"filters",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#facetfilterinput"},(0,u.kt)("code",null,"[FacetFilterInput!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Faceted filters applied to browse results"))))),(0,u.kt)("h2",{id:"browsepathsinput"},"BrowsePathsInput"),(0,u.kt)("p",null,"Inputs for fetching the browse paths for a Metadata Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"type",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,u.kt)("code",null,"EntityType!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The browse entity type"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"urn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The entity urn"))))),(0,u.kt)("h2",{id:"charteditablepropertiesupdate"},"ChartEditablePropertiesUpdate"),(0,u.kt)("p",null,"Update to writable Chart fields"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Writable description aka documentation for a Chart"))))),(0,u.kt)("h2",{id:"chartupdateinput"},"ChartUpdateInput"),(0,u.kt)("p",null,"Arguments provided to update a Chart Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"ownership",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,u.kt)("code",null,"OwnershipUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to ownership"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"globalTags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"tags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to tags"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"editableProperties",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#charteditablepropertiesupdate"},(0,u.kt)("code",null,"ChartEditablePropertiesUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to editable properties"))))),(0,u.kt)("h2",{id:"creategroupinput"},"CreateGroupInput"),(0,u.kt)("p",null,"Input for creating a new group"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"name",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The display name of the group"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The description of the group"))))),(0,u.kt)("h2",{id:"dashboardeditablepropertiesupdate"},"DashboardEditablePropertiesUpdate"),(0,u.kt)("p",null,"Update to writable Dashboard fields"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Writable description aka documentation for a Dashboard"))))),(0,u.kt)("h2",{id:"dashboardupdateinput"},"DashboardUpdateInput"),(0,u.kt)("p",null,"Arguments provided to update a Chart Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"ownership",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,u.kt)("code",null,"OwnershipUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to ownership"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"globalTags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"tags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to tags"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"editableProperties",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#dashboardeditablepropertiesupdate"},(0,u.kt)("code",null,"DashboardEditablePropertiesUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to editable properties"))))),(0,u.kt)("h2",{id:"datafloweditablepropertiesupdate"},"DataFlowEditablePropertiesUpdate"),(0,u.kt)("p",null,"Update to writable Data Flow fields"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Writable description aka documentation for a Data Flow"))))),(0,u.kt)("h2",{id:"dataflowupdateinput"},"DataFlowUpdateInput"),(0,u.kt)("p",null,"Arguments provided to update a Data Flow aka Pipeline Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"ownership",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,u.kt)("code",null,"OwnershipUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to ownership"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"globalTags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"tags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to tags"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"editableProperties",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#datafloweditablepropertiesupdate"},(0,u.kt)("code",null,"DataFlowEditablePropertiesUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to editable properties"))))),(0,u.kt)("h2",{id:"datajobeditablepropertiesupdate"},"DataJobEditablePropertiesUpdate"),(0,u.kt)("p",null,"Update to writable Data Job fields"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Writable description aka documentation for a Data Job"))))),(0,u.kt)("h2",{id:"datajobupdateinput"},"DataJobUpdateInput"),(0,u.kt)("p",null,"Arguments provided to update a Data Job aka Task Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"ownership",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,u.kt)("code",null,"OwnershipUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to ownership"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"globalTags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"tags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to tags"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"editableProperties",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#datajobeditablepropertiesupdate"},(0,u.kt)("code",null,"DataJobEditablePropertiesUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to editable properties"))))),(0,u.kt)("h2",{id:"datasetdeprecationupdate"},"DatasetDeprecationUpdate"),(0,u.kt)("p",null,"An update for the deprecation information for a Metadata Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"deprecated",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,u.kt)("code",null,"Boolean!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Whether the dataset is deprecated"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"decommissionTime",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#long"},(0,u.kt)("code",null,"Long"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The time user plan to decommission this dataset"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"note",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Additional information about the dataset deprecation plan"))))),(0,u.kt)("h2",{id:"dataseteditablepropertiesupdate"},"DatasetEditablePropertiesUpdate"),(0,u.kt)("p",null,"Update to writable Dataset fields"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Writable description aka documentation for a Dataset"))))),(0,u.kt)("h2",{id:"datasetupdateinput"},"DatasetUpdateInput"),(0,u.kt)("p",null,"Arguments provided to update a Dataset Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"ownership",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,u.kt)("code",null,"OwnershipUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to ownership"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"deprecation",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#datasetdeprecationupdate"},(0,u.kt)("code",null,"DatasetDeprecationUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to deprecation status"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"institutionalMemory",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#institutionalmemoryupdate"},(0,u.kt)("code",null,"InstitutionalMemoryUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to institutional memory, ie documentation"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"globalTags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"tags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to tags"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"editableSchemaMetadata",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#editableschemametadataupdate"},(0,u.kt)("code",null,"EditableSchemaMetadataUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to editable schema metadata of the dataset"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"editableProperties",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#dataseteditablepropertiesupdate"},(0,u.kt)("code",null,"DatasetEditablePropertiesUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to editable properties"))))),(0,u.kt)("h2",{id:"descriptionupdateinput"},"DescriptionUpdateInput"),(0,u.kt)("p",null,"Incubating. Updates the description of a resource. Currently supports DatasetField descriptions only"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The new description"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"resourceUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The primary key of the resource to attach the description to, eg dataset urn"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"subResourceType",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#subresourcetype"},(0,u.kt)("code",null,"SubResourceType"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"An optional sub resource type"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"subResource",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"A sub resource identitifer, eg dataset field path"))))),(0,u.kt)("h2",{id:"editableschemafieldinfoupdate"},"EditableSchemaFieldInfoUpdate"),(0,u.kt)("p",null,"Update to writable schema field metadata"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"fieldPath",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Flattened name of a field identifying the field the editable info is applied to"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Edited description of the field"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"globalTags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,u.kt)("code",null,"GlobalTagsUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Tags associated with the field"))))),(0,u.kt)("h2",{id:"editableschemametadataupdate"},"EditableSchemaMetadataUpdate"),(0,u.kt)("p",null,"Update to editable schema metadata of the dataset"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"editableSchemaFieldInfo",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#editableschemafieldinfoupdate"},(0,u.kt)("code",null,"[EditableSchemaFieldInfoUpdate!]!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Update to writable schema field metadata"))))),(0,u.kt)("h2",{id:"entitycountinput"},"EntityCountInput"),(0,u.kt)("p",null,"Input for the get entity counts endpoint"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"types",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,u.kt)("code",null,"[EntityType!]"))),(0,u.kt)("td",null)))),(0,u.kt)("h2",{id:"entityrequestcontext"},"EntityRequestContext"),(0,u.kt)("p",null,"Context that defines an entity page requesting recommendations"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"type",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,u.kt)("code",null,"EntityType!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Type of the enity being displayed"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"urn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Urn of the entity being displayed"))))),(0,u.kt)("h2",{id:"facetfilterinput"},"FacetFilterInput"),(0,u.kt)("p",null,"Facet filters to apply to search results"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"field",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Name of field to filter by"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"value",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Value of the field to filter by"))))),(0,u.kt)("h2",{id:"getaccesstokeninput"},"GetAccessTokenInput"),(0,u.kt)("p",null,"Input required to fetch a new Access Token."),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"type",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#accesstokentype"},(0,u.kt)("code",null,"AccessTokenType!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The type of the Access Token."))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"actorUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The actor associated with the Access Token."))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"duration",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#accesstokenduration"},(0,u.kt)("code",null,"AccessTokenDuration!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The duration for which the Access Token is valid."))))),(0,u.kt)("h2",{id:"globaltagsupdate"},"GlobalTagsUpdate"),(0,u.kt)("p",null,"Deprecated, use addTag or removeTag mutation instead\nUpdate to the Tags associated with a Metadata Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"tags",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#tagassociationupdate"},(0,u.kt)("code",null,"[TagAssociationUpdate!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The new set of tags"))))),(0,u.kt)("h2",{id:"institutionalmemorymetadataupdate"},"InstitutionalMemoryMetadataUpdate"),(0,u.kt)("p",null,"An institutional memory to add to a Metadata Entity\nTODO Add a USER or GROUP actor enum"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"url",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Link to a document or wiki page or another internal resource"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Description of the resource"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"author",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The corp user urn of the author of the metadata"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"createdAt",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#long"},(0,u.kt)("code",null,"Long"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The time at which this metadata was created"))))),(0,u.kt)("h2",{id:"institutionalmemoryupdate"},"InstitutionalMemoryUpdate"),(0,u.kt)("p",null,"An update for the institutional memory information for a Metadata Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"elements",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#institutionalmemorymetadataupdate"},(0,u.kt)("code",null,"[InstitutionalMemoryMetadataUpdate!]!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The individual references in the institutional memory"))))),(0,u.kt)("h2",{id:"listgroupsinput"},"ListGroupsInput"),(0,u.kt)("p",null,"Input required when listing DataHub Groups"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"start",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The starting offset of the result set returned"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"count",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The maximum number of Policies to be returned in the result set"))))),(0,u.kt)("h2",{id:"listpoliciesinput"},"ListPoliciesInput"),(0,u.kt)("p",null,"Input required when listing DataHub Access Policies"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"start",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The starting offset of the result set returned"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"count",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The maximum number of Policies to be returned in the result set"))))),(0,u.kt)("h2",{id:"listrecommendationsinput"},"ListRecommendationsInput"),(0,u.kt)("p",null,"Input arguments for fetching UI recommendations"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"userUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Urn of the actor requesting recommendations"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"requestContext",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#recommendationrequestcontext"},(0,u.kt)("code",null,"RecommendationRequestContext"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Context provider by the caller requesting recommendations"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"limit",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Max number of modules to return"))))),(0,u.kt)("h2",{id:"listusersinput"},"ListUsersInput"),(0,u.kt)("p",null,"Input required when listing DataHub Users"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"start",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The starting offset of the result set returned"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"count",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The maximum number of Policies to be returned in the result set"))))),(0,u.kt)("h2",{id:"ownershipupdate"},"OwnershipUpdate"),(0,u.kt)("p",null,"An update for the ownership information for a Metadata Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"owners",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#ownerupdate"},(0,u.kt)("code",null,"[OwnerUpdate!]!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The updated list of owners"))))),(0,u.kt)("h2",{id:"ownerupdate"},"OwnerUpdate"),(0,u.kt)("p",null,"An owner to add to a Metadata Entity\nTODO Add a USER or GROUP actor enum"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"owner",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The owner URN, either a corpGroup or corpuser"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"type",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#ownershiptype"},(0,u.kt)("code",null,"OwnershipType!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The owner type"))))),(0,u.kt)("h2",{id:"policyupdateinput"},"PolicyUpdateInput"),(0,u.kt)("p",null,"Input provided when creating or updating an Access Policy"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"type",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#policytype"},(0,u.kt)("code",null,"PolicyType!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The Policy Type"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"name",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The Policy name"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"state",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#policystate"},(0,u.kt)("code",null,"PolicyState!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The Policy state"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"A Policy description"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"resources",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#resourcefilterinput"},(0,u.kt)("code",null,"ResourceFilterInput"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The set of resources that the Policy privileges apply to"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"privileges",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"[String!]!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The set of privileges that the Policy grants"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"actors",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#actorfilterinput"},(0,u.kt)("code",null,"ActorFilterInput!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The set of actors that the Policy privileges are granted to"))))),(0,u.kt)("h2",{id:"recommendationrequestcontext"},"RecommendationRequestContext"),(0,u.kt)("p",null,"Context that defines the page requesting recommendations\ni.e. for search pages, the query/filters. for entity pages, the entity urn and tab"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"scenario",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#scenariotype"},(0,u.kt)("code",null,"ScenarioType!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Scenario in which the recommendations will be displayed"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"searchRequestContext",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#searchrequestcontext"},(0,u.kt)("code",null,"SearchRequestContext"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Additional context for defining the search page requesting recommendations"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"entityRequestContext",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#entityrequestcontext"},(0,u.kt)("code",null,"EntityRequestContext"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Additional context for defining the entity page requesting recommendations"))))),(0,u.kt)("h2",{id:"relationshipsinput"},"RelationshipsInput"),(0,u.kt)("p",null,"Input for the list relationships field of an Entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"types",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"[String!]!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The types of relationships to query, representing an OR"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"direction",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#relationshipdirection"},(0,u.kt)("code",null,"RelationshipDirection!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The direction of the relationship, either incoming or outgoing from the source entity"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"start",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The starting offset of the result set"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"count",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The number of results to be returned"))))),(0,u.kt)("h2",{id:"removegroupmembersinput"},"RemoveGroupMembersInput"),(0,u.kt)("p",null,"Input required to remove members from a DataHub group"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"groupUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The group to remove members from"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"userUrns",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"[String!]!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The members to remove from the group"))))),(0,u.kt)("h2",{id:"removelinkinput"},"RemoveLinkInput"),(0,u.kt)("p",null,"Input provided when removing the association between a Metadata Entity and a Link"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"linkUrl",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The url of the link to add or remove, which uniquely identifies the Link"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"resourceUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The urn of the resource or entity to attach the link to, for example a dataset urn"))))),(0,u.kt)("h2",{id:"removeownerinput"},"RemoveOwnerInput"),(0,u.kt)("p",null,"Input provided when removing the association between a Metadata Entity and an user or group owner"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"ownerUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The primary key of the Owner to add or remove"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"resourceUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The urn of the resource or entity to attach or remove the owner from, for example a dataset urn"))))),(0,u.kt)("h2",{id:"resourcefilterinput"},"ResourceFilterInput"),(0,u.kt)("p",null,"Input required when creating or updating an Access Policies Determines which resources the Policy applies to"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"type",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The type of the resource the policy should apply to Not required because in the future we want to support filtering by type OR by domain"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"resources",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"[String!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"A list of specific resource urns to apply the filter to"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"allResources",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,u.kt)("code",null,"Boolean!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Whether of not to apply the filter to all resources of the type"))))),(0,u.kt)("h2",{id:"searchacrossentitiesinput"},"SearchAcrossEntitiesInput"),(0,u.kt)("p",null,"Input arguments for a full text search query across entities"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"types",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,u.kt)("code",null,"[EntityType!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Entity types to be searched. If this is not provided, all entities will be searched."))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"query",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The query string"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"start",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The starting point of paginated results"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"count",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The number of elements included in the results"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"filters",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#facetfilterinput"},(0,u.kt)("code",null,"[FacetFilterInput!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Faceted filters applied to search results"))))),(0,u.kt)("h2",{id:"searchinput"},"SearchInput"),(0,u.kt)("p",null,"Input arguments for a full text search query"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"type",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,u.kt)("code",null,"EntityType!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The Metadata Entity type to be searched against"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"query",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The raw query string"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"start",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The offset of the result set"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"count",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#int"},(0,u.kt)("code",null,"Int"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The number of entities to include in result set"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"filters",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#facetfilterinput"},(0,u.kt)("code",null,"[FacetFilterInput!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Facet filters to apply to search results"))))),(0,u.kt)("h2",{id:"searchrequestcontext"},"SearchRequestContext"),(0,u.kt)("p",null,"Context that defines a search page requesting recommendatinos"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"query",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Search query"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"filters",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#facetfilterinput"},(0,u.kt)("code",null,"[FacetFilterInput!]"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Faceted filters applied to search results"))))),(0,u.kt)("h2",{id:"tagassociationinput"},"TagAssociationInput"),(0,u.kt)("p",null,"Input provided when updating the association between a Metadata Entity and a Tag"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"tagUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The primary key of the Tag to add or remove"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"resourceUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The target Metadata Entity to add or remove the Tag to"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"subResourceType",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#subresourcetype"},(0,u.kt)("code",null,"SubResourceType"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"An optional type of a sub resource to attach the Tag to"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"subResource",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"An optional sub resource identifier to attach the Tag to"))))),(0,u.kt)("h2",{id:"tagassociationupdate"},"TagAssociationUpdate"),(0,u.kt)("p",null,"Deprecated, use addTag or removeTag mutation instead\nA tag update to be applied"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"tag",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#tagupdateinput"},(0,u.kt)("code",null,"TagUpdateInput!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The tag being applied"))))),(0,u.kt)("h2",{id:"tagupdateinput"},"TagUpdateInput"),(0,u.kt)("p",null,"Deprecated, use addTag or removeTag mutations instead\nAn update for a particular Tag entity"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"urn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The primary key of the Tag"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"name",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The display name of a Tag"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"description",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Description of the tag"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"ownership",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,u.kt)("code",null,"OwnershipUpdate"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"Ownership metadata of the tag"))))),(0,u.kt)("h2",{id:"termassociationinput"},"TermAssociationInput"),(0,u.kt)("p",null,"Input provided when updating the association between a Metadata Entity and a Glossary Term"),(0,u.kt)("p",{style:{marginBottom:"0.4em"}},(0,u.kt)("strong",null,"Arguments")),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"termUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The primary key of the Glossary Term to add or remove"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"resourceUrn",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String!"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"The target Metadata Entity to add or remove the Glossary Term from"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"subResourceType",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/enums#subresourcetype"},(0,u.kt)("code",null,"SubResourceType"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"An optional type of a sub resource to attach the Glossary Term to"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"subResource",(0,u.kt)("br",null),(0,u.kt)("a",{href:"/docs/graphql/scalars#string"},(0,u.kt)("code",null,"String"))),(0,u.kt)("td",null,(0,u.kt)("p",null,"An optional sub resource identifier to attach the Glossary Term to"))))))}p.isMDXComponent=!0}}]);