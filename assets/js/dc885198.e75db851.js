"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[5062],{4137:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return p}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(a),p=o,h=c["".concat(d,".").concat(p)]||c[p]||m[p]||r;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function p(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},778:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return u},default:function(){return c}});var n=a(7462),o=a(3366),r=(a(7294),a(4137)),i=["components"],l={title:"A Custom Metadata Model",sidebar_label:"A Custom Metadata Model",slug:"/metadata-models-custom",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/metadata-models-custom/README.md"},d="A Custom Metadata Model",s={unversionedId:"metadata-models-custom/README",id:"metadata-models-custom/README",isDocsHomePage:!1,title:"A Custom Metadata Model",description:"This module hosts a gradle project where you can store your custom metadata model. It contains an example extension for you to follow.",source:"@site/genDocs/metadata-models-custom/README.md",sourceDirName:"metadata-models-custom",slug:"/metadata-models-custom",permalink:"/docs/metadata-models-custom",editUrl:"https://github.com/linkedin/datahub/blob/master/metadata-models-custom/README.md",tags:[],version:"current",frontMatter:{title:"A Custom Metadata Model",sidebar_label:"A Custom Metadata Model",slug:"/metadata-models-custom",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/metadata-models-custom/README.md"}},u=[{value:"Caveats",id:"caveats",children:[],level:3},{value:"Pre-Requisites",id:"pre-requisites",children:[],level:2},{value:"Create your new aspect(s)",id:"create-your-new-aspects",children:[],level:2},{value:"Add your aspect(s) to the entity registry",id:"add-your-aspects-to-the-entity-registry",children:[],level:2},{value:"Understanding the entity registry",id:"understanding-the-entity-registry",children:[],level:2},{value:"Build your new model",id:"build-your-new-model",children:[{value:"Build a versioned artifact",id:"build-a-versioned-artifact",children:[],level:3},{value:"Deploy your versioned artifact to DataHub",id:"deploy-your-versioned-artifact-to-datahub",children:[],level:3},{value:"Check if your model got loaded successfully",id:"check-if-your-model-got-loaded-successfully",children:[],level:3},{value:"Add some metadata with your new model",id:"add-some-metadata-with-your-new-model",children:[],level:3}],level:2},{value:"Advanced Guide",id:"advanced-guide",children:[{value:"Deleting metadata associated with a model",id:"deleting-metadata-associated-with-a-model",children:[],level:3},{value:"Evolve the metadata model",id:"evolve-the-metadata-model",children:[],level:3}],level:2},{value:"The Future",id:"the-future",children:[],level:2}],m={toc:u};function c(e){var t=e.components,a=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"a-custom-metadata-model"},"A Custom Metadata Model"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/linkedin/datahub/blob/master/metadata-models-custom/"},"This module")," hosts a gradle project where you can store your custom metadata model. It contains an example extension for you to follow."),(0,r.kt)("h3",{id:"caveats"},"Caveats"),(0,r.kt)("p",null,"Currently, this project only supports adding new aspects to existing entities. You cannot add new entities to the metadata model yet."),(0,r.kt)("h2",{id:"pre-requisites"},"Pre-Requisites"),(0,r.kt)("p",null,"Before proceeding further, make sure you understand the DataHub Metadata Model concepts defined ",(0,r.kt)("a",{parentName:"p",href:"/docs/metadata-modeling/metadata-model"},"here")," and extending the model defined ",(0,r.kt)("a",{parentName:"p",href:"/docs/metadata-modeling/extending-the-metadata-model"},"here"),". "),(0,r.kt)("h2",{id:"create-your-new-aspects"},"Create your new aspect(s)"),(0,r.kt)("p",null,"Follow the regular process in creating a new aspect by adding it to the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/linkedin/datahub/blob/master/metadata-models-custom/src/main/pegasus"},(0,r.kt)("inlineCode",{parentName:"a"},"src/main/pegasus"))," folder. e.g. This repository has an Aspect called ",(0,r.kt)("inlineCode",{parentName:"p"},"customDataQualityRules")," hosted in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/linkedin/datahub/blob/master/metadata-models-custom/src/main/pegasus/com/mycompany/dq/DataQualityRules.pdl"},(0,r.kt)("inlineCode",{parentName:"a"},"DataQualityRules.pdl"))," file that you can follow.\nOnce you've gone through this exercise, feel free to delete the sample aspects that are stored in this module."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Tip")),": PDL requires that the name of the file must match the name of the class that is defined in it, so keep that in mind when you create your aspect pdl file."),(0,r.kt)("h2",{id:"add-your-aspects-to-the-entity-registry"},"Add your aspect(s) to the entity registry"),(0,r.kt)("p",null,"Add your new aspect(s) to the entity registry by editing the yaml file located under ",(0,r.kt)("inlineCode",{parentName:"p"},"registry/entity-registry.yaml"),".\n",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note")),": The registry file must be called ",(0,r.kt)("inlineCode",{parentName:"p"},"entity-registry.yaml")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"entity-registry.yml")," for it to be recognized."),(0,r.kt)("h2",{id:"understanding-the-entity-registry"},"Understanding the entity registry"),(0,r.kt)("p",null,"Here is a sample entity-registry file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"id: mycompany-dq-model\nentities:\n  - name: dataset\n    aspects:\n      - customDataQualityRules\n")),(0,r.kt)("p",null,"The entity registry has a few important fields to pay attention to: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"id: this is the name of your registry. This drives naming, artifact generation, so make sure you pick a unique name that will not conflict with other names you might create for other registries. "),(0,r.kt)("li",{parentName:"ul"},"entities: this is a list of entities with aspects attached to them that you are creating additional aspects for. In this example, we are adding the aspect ",(0,r.kt)("inlineCode",{parentName:"li"},"customDataQualityRules")," to the ",(0,r.kt)("inlineCode",{parentName:"li"},"dataset")," entity. ")),(0,r.kt)("h2",{id:"build-your-new-model"},"Build your new model"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"../gradlew build\n")),(0,r.kt)("h3",{id:"build-a-versioned-artifact"},"Build a versioned artifact"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"../gradlew -PprojVersion=0.0.1 build\n")),(0,r.kt)("p",null,"This will deposit an artifact called ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata-models-custom-<version>.zip")," under the ",(0,r.kt)("inlineCode",{parentName:"p"},"build/dist")," directory. "),(0,r.kt)("h3",{id:"deploy-your-versioned-artifact-to-datahub"},"Deploy your versioned artifact to DataHub"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"../gradlew -PprojVersion=0.0.1 install\n")),(0,r.kt)("p",null,"This will unpack the artifact and deposit it under ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.datahub/plugins/models/<registry-name>/<registry-version>/"),". "),(0,r.kt)("h3",{id:"check-if-your-model-got-loaded-successfully"},"Check if your model got loaded successfully"),(0,r.kt)("p",null,"Assuming that you are running DataHub on localhost, you can curl the config endpoint to see the model load status. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"curl -s http://localhost:8080/config | jq .\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "models": {\n    "mycompany-dq-model": {\n      "0.0.1": {\n        "loadResult": "SUCCESS",\n        "registryLocation": "/Users/username/.datahub/plugins/models/mycompany-dq-model/0.0.1",\n        "failureCount": 0\n      }\n    }\n  },\n  "noCode": "true"\n}\n')),(0,r.kt)("h3",{id:"add-some-metadata-with-your-new-model"},"Add some metadata with your new model"),(0,r.kt)("p",null,"We have included some sample scripts that you can modify to upload data corresponding to your new data model.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"scripts/insert_one.sh")," script takes the ",(0,r.kt)("inlineCode",{parentName:"p"},"scripts/data/dq_rule.json")," file and attaches it to the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataset_urn")," entity using the ",(0,r.kt)("inlineCode",{parentName:"p"},"datahub")," cli. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"cd scripts\n./insert_one.sh\n")),(0,r.kt)("p",null,"results in "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"Update succeeded with status 200\n")),(0,r.kt)("h2",{id:"advanced-guide"},"Advanced Guide"),(0,r.kt)("p",null,"A few things that you will likely do as you start creating new models and creating metadata that conforms to those models. "),(0,r.kt)("h3",{id:"deleting-metadata-associated-with-a-model"},"Deleting metadata associated with a model"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"datahub")," cli supports deleting metadata associated with a model as a customization of the ",(0,r.kt)("inlineCode",{parentName:"p"},"delete")," command. "),(0,r.kt)("p",null,"e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"datahub delete --registry-id=mycompany-dq-model:0.0.1")," will delete all data written using this registry name and version pair. "),(0,r.kt)("h3",{id:"evolve-the-metadata-model"},"Evolve the metadata model"),(0,r.kt)("p",null,"As you evolve the metadata model, you can publish new versions of the repository and deploy it into DataHub as well using the same steps outlined above. DataHub will check whether your new models are backwards compatible with the previous versioned model and decline loading models that are backwards incompatible. "),(0,r.kt)("h2",{id:"the-future"},"The Future"),(0,r.kt)("p",null,"Hopefully this repository shows you how easily you can extend and customize DataHub's metadata model.\nWe will be adding support for adding new entities soon, and programmatically generating Python classes to make it even easier to interact with the extended metadata model."))}c.isMDXComponent=!0}}]);